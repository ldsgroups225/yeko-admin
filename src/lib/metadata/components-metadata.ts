// Auto-generated components metadata
// Generated on: 2025-09-09T15:38:49.999Z

import type { ComponentMetadata } from "./metadata-types";

export const components: ComponentMetadata[] = [
  {
    name: "Combobox",
    file: "src/components/Combobox.tsx",
    props: [],
    imports: ["lucide-react", "react", "@/components/ui/button", "@/lib/utils"],
    size: 2507,
    lastModified: new Date("2025-09-07T12:14:23.198Z"),
  },
  {
    name: "EnhancedErrorBoundary",
    file: "src/components/ErrorBoundary/EnhancedErrorBoundary.tsx",
    props: [
      "children: React.ReactNode;",
      "fallback?: React.ComponentType<ErrorFallbackProps>;",
      "onError?: (error: Error, errorInfo: React.ErrorInfo) => void;",
      "showDialog?: boolean;",
      "maxRetries?: number;",
      "retryDelay?: number;",
      "componentName?: string;",
      "context?: Record<string, unknown>;",
      "logToBetterStack?: boolean;",
    ],
    imports: [
      "@sentry/nextjs",
      "lucide-react",
      "react",
      "@/components/ui/badge",
      "@/components/ui/button",
      "@/components/ui/separator",
      "@/lib/logger",
      "@/lib/sentry-integration",
    ],
    size: 14006,
    lastModified: new Date("2025-09-08T20:12:55.682Z"),
  },
  {
    name: "ErrorBoundaryExamples",
    file: "src/components/ErrorBoundary/ErrorBoundaryExamples.tsx",
    props: [],
    imports: ["react", "@/components/ui/button"],
    size: 10215,
    lastModified: new Date("2025-09-08T18:49:17.962Z"),
  },
  {
    name: "ApiErrorBoundary",
    file: "src/components/ErrorBoundary/SpecializedErrorBoundaries.tsx",
    props: [],
    imports: [
      "@sentry/nextjs",
      "react",
      "@/components/ui/badge",
      "@/components/ui/button",
      "@/lib/logger",
      "./EnhancedErrorBoundary",
    ],
    size: 15894,
    lastModified: new Date("2025-09-08T18:49:18.029Z"),
  },
  {
    name: "PageErrorBoundary",
    file: "src/components/ErrorBoundary.tsx",
    props: [
      "children: React.ReactNode;",
      "fallback?: React.ComponentType<ErrorFallbackProps>;",
      "onError?: (error: Error, errorInfo: React.ErrorInfo) => void;",
      "showDialog?: boolean;",
    ],
    imports: [
      "@sentry/nextjs",
      "lucide-react",
      "react",
      "@/components/ui/button",
      "@/lib/error-logging",
      "@/lib/logger",
    ],
    size: 7156,
    lastModified: new Date("2025-09-08T18:49:18.033Z"),
  },
  {
    name: "GoogleSignInButton",
    file: "src/components/GoogleSignInButton.tsx",
    props: [],
    imports: [
      "react",
      "@/components/ui/button",
      "@/hooks/useGoogleAuth",
      "@/lib/utils",
      "@/types",
    ],
    size: 5047,
    lastModified: new Date("2025-09-07T11:49:24.470Z"),
  },
  {
    name: "Header",
    file: "src/components/Header.tsx",
    props: [],
    imports: ["react", "@/lib/utils/cn"],
    size: 4040,
    lastModified: new Date("2025-09-08T11:49:46.431Z"),
  },
  {
    name: "NavbarActionButton",
    file: "src/components/NavbarActionButton.tsx",
    props: [],
    imports: [
      "next/link",
      "next/navigation",
      "react",
      "@/components/ui/button",
      "@/constants",
    ],
    size: 920,
    lastModified: new Date("2025-09-07T08:07:48.973Z"),
  },
  {
    name: "HomePage",
    file: "src/components/StructuredData.tsx",
    props: ["data: StructuredData | StructuredData[];", "id?: string;"],
    imports: [
      "react",
      "@/lib/structured-data",
      "@/components/StructuredData",
      "@/lib/structured-data",
      "@/components/StructuredData",
      "@/lib/structured-data",
    ],
    size: 5250,
    lastModified: new Date("2025-09-08T17:15:36.412Z"),
  },
  {
    name: "StructuredDataLayout",
    file: "src/components/layout/StructuredDataLayout.tsx",
    props: [],
    imports: ["@/components/StructuredData", "@/lib/structured-data"],
    size: 2889,
    lastModified: new Date("2025-09-08T17:15:16.345Z"),
  },
  {
    name: "accordion",
    file: "src/components/ui/accordion.tsx",
    props: [],
    imports: [
      "react",
      "@radix-ui/react-accordion",
      "lucide-react",
      "@/lib/utils",
    ],
    size: 2053,
    lastModified: new Date("2025-09-06T18:55:12.591Z"),
  },
  {
    name: "alert-dialog",
    file: "src/components/ui/alert-dialog.tsx",
    props: [],
    imports: [
      "react",
      "@radix-ui/react-alert-dialog",
      "@/lib/utils",
      "@/components/ui/button",
    ],
    size: 3864,
    lastModified: new Date("2025-09-06T18:55:20.107Z"),
  },
  {
    name: "alert",
    file: "src/components/ui/alert.tsx",
    props: [],
    imports: ["react", "class-variance-authority", "@/lib/utils"],
    size: 1614,
    lastModified: new Date("2025-09-06T18:55:12.612Z"),
  },
  {
    name: "aspect-ratio",
    file: "src/components/ui/aspect-ratio.tsx",
    props: [],
    imports: ["@radix-ui/react-aspect-ratio"],
    size: 280,
    lastModified: new Date("2025-09-06T18:55:12.619Z"),
  },
  {
    name: "avatar",
    file: "src/components/ui/avatar.tsx",
    props: [],
    imports: ["react", "@radix-ui/react-avatar", "@/lib/utils"],
    size: 1097,
    lastModified: new Date("2025-09-06T18:55:12.628Z"),
  },
  {
    name: "badge",
    file: "src/components/ui/badge.tsx",
    props: [],
    imports: [
      "react",
      "@radix-ui/react-slot",
      "class-variance-authority",
      "@/lib/utils",
    ],
    size: 1631,
    lastModified: new Date("2025-09-06T18:55:12.641Z"),
  },
  {
    name: "breadcrumb",
    file: "src/components/ui/breadcrumb.tsx",
    props: [],
    imports: ["react", "@radix-ui/react-slot", "lucide-react", "@/lib/utils"],
    size: 2357,
    lastModified: new Date("2025-09-06T18:55:12.655Z"),
  },
  {
    name: "Default",
    file: "src/components/ui/button.stories.tsx",
    props: [],
    imports: ["@storybook/react", "@storybook/test", "./button"],
    size: 3951,
    lastModified: new Date("2025-09-08T15:09:22.637Z"),
  },
  {
    name: "button",
    file: "src/components/ui/button.tsx",
    props: [],
    imports: [
      "@radix-ui/react-slot",
      "class-variance-authority",
      "react",
      "@/lib/utils",
    ],
    size: 2138,
    lastModified: new Date("2025-09-06T22:33:10.931Z"),
  },
  {
    name: "calendar",
    file: "src/components/ui/calendar.tsx",
    props: [],
    imports: [
      "react",
      "react-day-picker",
      "@/lib/utils",
      "@/components/ui/button",
    ],
    size: 7660,
    lastModified: new Date("2025-09-06T18:55:20.132Z"),
  },
  {
    name: "Default",
    file: "src/components/ui/card.stories.tsx",
    props: [],
    imports: ["@storybook/react", "./button"],
    size: 7978,
    lastModified: new Date("2025-09-08T15:10:06.321Z"),
  },
  {
    name: "card",
    file: "src/components/ui/card.tsx",
    props: [],
    imports: ["react", "@/lib/utils"],
    size: 1989,
    lastModified: new Date("2025-09-06T18:55:12.685Z"),
  },
  {
    name: "carousel",
    file: "src/components/ui/carousel.tsx",
    props: [],
    imports: ["react", "lucide-react", "@/lib/utils", "@/components/ui/button"],
    size: 5556,
    lastModified: new Date("2025-09-06T18:55:20.161Z"),
  },
  {
    name: "chart",
    file: "src/components/ui/chart.tsx",
    props: [],
    imports: ["react", "recharts", "@/lib/utils"],
    size: 9781,
    lastModified: new Date("2025-09-06T18:55:20.211Z"),
  },
  {
    name: "checkbox",
    file: "src/components/ui/checkbox.tsx",
    props: [],
    imports: [
      "react",
      "@radix-ui/react-checkbox",
      "lucide-react",
      "@/lib/utils",
    ],
    size: 1226,
    lastModified: new Date("2025-09-06T18:55:12.692Z"),
  },
  {
    name: "collapsible",
    file: "src/components/ui/collapsible.tsx",
    props: [],
    imports: ["@radix-ui/react-collapsible"],
    size: 800,
    lastModified: new Date("2025-09-06T18:55:12.698Z"),
  },
  {
    name: "command",
    file: "src/components/ui/command.tsx",
    props: [],
    imports: ["react", "cmdk", "lucide-react", "@/lib/utils"],
    size: 4818,
    lastModified: new Date("2025-09-06T18:55:20.232Z"),
  },
  {
    name: "context-menu",
    file: "src/components/ui/context-menu.tsx",
    props: [],
    imports: [
      "react",
      "@radix-ui/react-context-menu",
      "lucide-react",
      "@/lib/utils",
    ],
    size: 8222,
    lastModified: new Date("2025-09-06T18:55:12.720Z"),
  },
  {
    name: "dialog",
    file: "src/components/ui/dialog.tsx",
    props: [],
    imports: ["react", "@radix-ui/react-dialog", "lucide-react", "@/lib/utils"],
    size: 3982,
    lastModified: new Date("2025-09-06T18:55:12.742Z"),
  },
  {
    name: "drawer",
    file: "src/components/ui/drawer.tsx",
    props: [],
    imports: ["react", "vaul", "@/lib/utils"],
    size: 4255,
    lastModified: new Date("2025-09-06T18:55:12.773Z"),
  },
  {
    name: "dropdown-menu",
    file: "src/components/ui/dropdown-menu.tsx",
    props: [],
    imports: [
      "react",
      "@radix-ui/react-dropdown-menu",
      "lucide-react",
      "@/lib/utils",
    ],
    size: 8284,
    lastModified: new Date("2025-09-06T18:55:12.804Z"),
  },
  {
    name: "form",
    file: "src/components/ui/form.tsx",
    props: [],
    imports: [
      "react",
      "@radix-ui/react-label",
      "@radix-ui/react-slot",
      "@/lib/utils",
      "@/components/ui/label",
    ],
    size: 3759,
    lastModified: new Date("2025-09-06T18:55:20.261Z"),
  },
  {
    name: "hover-card",
    file: "src/components/ui/hover-card.tsx",
    props: [],
    imports: ["react", "@radix-ui/react-hover-card", "@/lib/utils"],
    size: 1532,
    lastModified: new Date("2025-09-06T18:55:12.814Z"),
  },
  {
    name: "input-otp",
    file: "src/components/ui/input-otp.tsx",
    props: [],
    imports: ["react", "input-otp", "lucide-react", "@/lib/utils"],
    size: 2254,
    lastModified: new Date("2025-09-06T18:55:12.827Z"),
  },
  {
    name: "Default",
    file: "src/components/ui/input.stories.tsx",
    props: [],
    imports: [
      "@storybook/react",
      "@storybook/test",
      "./button",
      "./input",
      "./label",
    ],
    size: 5517,
    lastModified: new Date("2025-09-08T15:10:45.548Z"),
  },
  {
    name: "input",
    file: "src/components/ui/input.tsx",
    props: [],
    imports: ["react", "@/lib/utils"],
    size: 967,
    lastModified: new Date("2025-09-06T18:55:12.817Z"),
  },
  {
    name: "label",
    file: "src/components/ui/label.tsx",
    props: [],
    imports: ["react", "@radix-ui/react-label", "@/lib/utils"],
    size: 611,
    lastModified: new Date("2025-09-06T18:55:12.836Z"),
  },
  {
    name: "menubar",
    file: "src/components/ui/menubar.tsx",
    props: [],
    imports: [
      "react",
      "@radix-ui/react-menubar",
      "lucide-react",
      "@/lib/utils",
    ],
    size: 8394,
    lastModified: new Date("2025-09-06T18:55:12.865Z"),
  },
  {
    name: "navigation-menu",
    file: "src/components/ui/navigation-menu.tsx",
    props: [],
    imports: [
      "react",
      "@radix-ui/react-navigation-menu",
      "class-variance-authority",
      "lucide-react",
      "@/lib/utils",
    ],
    size: 6664,
    lastModified: new Date("2025-09-06T18:55:12.892Z"),
  },
  {
    name: "pagination",
    file: "src/components/ui/pagination.tsx",
    props: [],
    imports: ["react", "@/lib/utils", "@/components/ui/button"],
    size: 2712,
    lastModified: new Date("2025-09-06T18:55:20.170Z"),
  },
  {
    name: "popover",
    file: "src/components/ui/popover.tsx",
    props: [],
    imports: ["react", "@radix-ui/react-popover", "@/lib/utils"],
    size: 1635,
    lastModified: new Date("2025-09-06T18:55:12.909Z"),
  },
  {
    name: "progress",
    file: "src/components/ui/progress.tsx",
    props: [],
    imports: ["react", "@radix-ui/react-progress", "@/lib/utils"],
    size: 740,
    lastModified: new Date("2025-09-06T18:55:12.923Z"),
  },
  {
    name: "radio-group",
    file: "src/components/ui/radio-group.tsx",
    props: [],
    imports: [
      "react",
      "@radix-ui/react-radio-group",
      "lucide-react",
      "@/lib/utils",
    ],
    size: 1466,
    lastModified: new Date("2025-09-06T18:55:12.936Z"),
  },
  {
    name: "resizable",
    file: "src/components/ui/resizable.tsx",
    props: [],
    imports: ["react", "lucide-react", "react-resizable-panels", "@/lib/utils"],
    size: 2028,
    lastModified: new Date("2025-09-06T18:55:12.948Z"),
  },
  {
    name: "scroll-area",
    file: "src/components/ui/scroll-area.tsx",
    props: [],
    imports: ["react", "@radix-ui/react-scroll-area", "@/lib/utils"],
    size: 1645,
    lastModified: new Date("2025-09-06T18:55:12.963Z"),
  },
  {
    name: "select",
    file: "src/components/ui/select.tsx",
    props: [],
    imports: ["react", "@radix-ui/react-select", "lucide-react", "@/lib/utils"],
    size: 6253,
    lastModified: new Date("2025-09-06T18:55:12.982Z"),
  },
  {
    name: "separator",
    file: "src/components/ui/separator.tsx",
    props: [],
    imports: ["react", "@radix-ui/react-separator", "@/lib/utils"],
    size: 699,
    lastModified: new Date("2025-09-06T18:55:12.989Z"),
  },
  {
    name: "sheet",
    file: "src/components/ui/sheet.tsx",
    props: [],
    imports: ["react", "@radix-ui/react-dialog", "lucide-react", "@/lib/utils"],
    size: 4090,
    lastModified: new Date("2025-09-06T18:55:13.004Z"),
  },
  {
    name: "sidebar",
    file: "src/components/ui/sidebar.tsx",
    props: [],
    imports: [
      "react",
      "@radix-ui/react-slot",
      "class-variance-authority",
      "lucide-react",
      "@/hooks/use-mobile",
      "@/lib/utils",
      "@/components/ui/button",
      "@/components/ui/input",
      "@/components/ui/separator",
      "@/components/ui/skeleton",
    ],
    size: 21633,
    lastModified: new Date("2025-09-06T18:55:20.356Z"),
  },
  {
    name: "skeleton",
    file: "src/components/ui/skeleton.tsx",
    props: [],
    imports: ["@/lib/utils"],
    size: 276,
    lastModified: new Date("2025-09-06T18:55:13.014Z"),
  },
  {
    name: "slider",
    file: "src/components/ui/slider.tsx",
    props: [],
    imports: ["react", "@radix-ui/react-slider", "@/lib/utils"],
    size: 2001,
    lastModified: new Date("2025-09-06T18:55:13.028Z"),
  },
  {
    name: "sonner",
    file: "src/components/ui/sonner.tsx",
    props: [],
    imports: ["next-themes", "sonner"],
    size: 564,
    lastModified: new Date("2025-09-06T18:55:13.044Z"),
  },
  {
    name: "switch",
    file: "src/components/ui/switch.tsx",
    props: [],
    imports: ["react", "@radix-ui/react-switch", "@/lib/utils"],
    size: 1177,
    lastModified: new Date("2025-09-06T18:55:13.053Z"),
  },
  {
    name: "table",
    file: "src/components/ui/table.tsx",
    props: [],
    imports: ["react", "@/lib/utils"],
    size: 2448,
    lastModified: new Date("2025-09-06T18:55:13.075Z"),
  },
  {
    name: "tabs",
    file: "src/components/ui/tabs.tsx",
    props: [],
    imports: ["react", "@radix-ui/react-tabs", "@/lib/utils"],
    size: 1969,
    lastModified: new Date("2025-09-06T18:55:13.080Z"),
  },
  {
    name: "textarea",
    file: "src/components/ui/textarea.tsx",
    props: [],
    imports: ["react", "@/lib/utils"],
    size: 759,
    lastModified: new Date("2025-09-06T18:55:13.094Z"),
  },
  {
    name: "toggle-group",
    file: "src/components/ui/toggle-group.tsx",
    props: [],
    imports: [
      "react",
      "@radix-ui/react-toggle-group",
      "class-variance-authority",
      "@/lib/utils",
      "@/components/ui/toggle",
    ],
    size: 1925,
    lastModified: new Date("2025-09-06T18:55:20.269Z"),
  },
  {
    name: "toggle",
    file: "src/components/ui/toggle.tsx",
    props: [],
    imports: [
      "react",
      "@radix-ui/react-toggle",
      "class-variance-authority",
      "@/lib/utils",
    ],
    size: 1570,
    lastModified: new Date("2025-09-06T18:55:13.099Z"),
  },
  {
    name: "tooltip",
    file: "src/components/ui/tooltip.tsx",
    props: [],
    imports: ["react", "@radix-ui/react-tooltip", "@/lib/utils"],
    size: 1891,
    lastModified: new Date("2025-09-06T18:55:13.116Z"),
  },
];

export function findComponent(name: string): ComponentMetadata | undefined {
  return components.find((component) => component.name === name);
}

export function findComponentsByFile(file: string): ComponentMetadata[] {
  return components.filter((component) => component.file === file);
}

export function getComponentImports(name: string): string[] {
  const component = findComponent(name);
  return component ? component.imports : [];
}

export function getComponentProps(name: string): string[] {
  const component = findComponent(name);
  return component ? component.props : [];
}

export function getComponentsBySize(minSize: number): ComponentMetadata[] {
  return components.filter((component) => component.size >= minSize);
}
